import { EventAPIAdapter } from "./src/adapters/EventAPIAdapter.js";

async function generateRandomEvents() {
  const DAYS_IN_FEBRUARY = 28; // Para simplificar, no manejamos años bisiestos aquí
  const MAX_EVENTS_PER_DAY = 3;
  const GENERATED_EVENTS = 60;

  const eventsPerDay = Array(DAYS_IN_FEBRUARY).fill(0); // Array para rastrear eventos por día
  const generatedEvents = [];

  for (let i = 0; i < GENERATED_EVENTS; i++) {
    let day;
    do {
      day = Math.floor(Math.random() * DAYS_IN_FEBRUARY) + 1; // Generar un día aleatorio
    } while (eventsPerDay[day - 1] >= MAX_EVENTS_PER_DAY);

    eventsPerDay[day - 1]++;

    // Crear evento con datos aleatorios
    const event = {
      userId: "123", // ID de usuario fijo (ajústalo según sea necesario)
      internalName: `AutoGenerated-Event-${i + 1}`, // Nombre interno único
      eventName: `Generated Event (R) #${i + 1}`, // Título público
      day: day,
      month: 2, // Febrero
      year: 2025,
      description: "Evento autogenerado por rutina de prueba.",
      isActive: true,
    };

    generatedEvents.push(event);
  }

  console.log(`Generando ${generatedEvents.length} eventos aleatorios para febrero...`);

  // Enviar los eventos generados al backend
  for (const event of generatedEvents) {
    try {
      const createdEvent = await EventAPIAdapter.createEvent(event);
      console.log("Evento creado:", createdEvent);
    } catch (error) {
      console.error("Error al crear el evento:", error.message || error);
    }
  }

  console.log("¡Rutina completada!");
}

generateRandomEvents();
